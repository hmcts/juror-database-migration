-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.2;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = hk,public;


   -----------
   --
   -----------
CREATE OR REPLACE PROCEDURE hk.housekeeping_nocommit_write_footer (p_code integer) AS $body$
BEGIN

     utl_file.put_line(l_file,' ',TRUE);
     utl_file.put_line(l_file,'No. of Juror selected for deletion ,'||current_setting('housekeeping_nocommit.l_part_count')::integer,TRUE);
     utl_file.put_line(l_file,'No. of Juror successfully deleted  ,'||l_cursor_loops,TRUE);
     utl_file.put_line(l_file,'No. of failures                    ,'||current_setting('housekeeping_nocommit.l_pool_errors')::integer,TRUE);

     IF p_code = 0 THEN
       utl_file.put_line(l_file,'Return Code 0 : Success',TRUE);
     ELSIF p_code = 1 THEN
       utl_file.put_line(l_file,'Return Code 1 : POOL errors raised',TRUE);
     ELSIF p_code = 2 THEN
       utl_file.put_line(l_file,'Return Code 2 : Fatal Error',TRUE);
     ELSIF p_code = 3 THEN
       utl_file.put_line(l_file,'Return Code 3 : Log File Error',TRUE);
     ELSIF p_code = 4 THEN
       utl_file.put_line(l_file,'Return Code 4 : Parameter Error',TRUE);
     ELSIF p_code = 5 THEN
       utl_file.put_line(l_file,'Return Code 5 : Max Deletions Limit',TRUE);
     ELSIF p_code = 6 THEN
       utl_file.put_line(l_file,'Return Code 6 : Timeout',TRUE);
     ELSE
       utl_file.put_line(l_file,'Unknow Return Code',TRUE);
     END IF;
     
     -- COMMENT OUT THIS AFTER UNIT TESTING
     ROLLBACK;

     UPDATE hk_run_log
     SET    end_time       = clock_timestamp()
     ,      return_code    = p_code
     ,      jurors_deleted = l_cursor_loops
     ,      jurors_error   = current_setting('housekeeping_nocommit.l_pool_errors')::integer
     WHERE  seq_id = l_seq;

     COMMIT;

   END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE hk.housekeeping_nocommit_write_footer (p_code integer) FROM PUBLIC;

-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.2;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = hk,public;

   
   -----------
   --
   -----------
CREATE OR REPLACE PROCEDURE hk.housekeeping_delete_sa_coroner () AS $body$
DECLARE


     l_start_pool_detail   timestamp(0);
     l_start               timestamp(0);
     l_end                 timestamp(0);
     l_deleted_pool_detail bigint;
     l_deleted             bigint;

   
BEGIN

     l_start_pool_detail := clock_timestamp();


     SELECT COUNT(*) INTO STRICT current_setting('housekeeping.l_coroner_pool_detail')::logs('PRE') FROM coroner_pool_detail;

     DELETE FROM coroner_pool_detail
     WHERE  cor_pool_no IN (SELECT cor_pool_no
                            FROM   coroner_pool
                            WHERE  cor_service_dt + current_setting('housekeeping.l_param_bureau_threshold')::integer < clock_timestamp()
                            );

     GET DIAGNOSTICS l_deleted_pool_detail = ROW_COUNT;

     l_start := clock_timestamp();

     SELECT COUNT(*) INTO STRICT current_setting('housekeeping.l_coroner_pool')::logs('PRE')  FROM coroner_pool;

     DELETE FROM coroner_pool
     WHERE  cor_service_dt + current_setting('housekeeping.l_param_bureau_threshold')::integer < clock_timestamp();

     GET DIAGNOSTICS l_deleted = ROW_COUNT;
     l_end     := clock_timestamp();

     IF p_read_only_mode THEN
       ROLLBACK;
     ELSE
       COMMIT;
     END IF;

     SELECT COUNT(*) INTO STRICT current_setting('housekeeping.l_coroner_pool_detail')::logs('POST') FROM coroner_pool_detail;

     SELECT COUNT(*) INTO STRICT current_setting('housekeeping.l_coroner_pool')::logs('POST')  FROM coroner_pool;

     utl_file.put_line(l_file,'CORONER_POOL_DETAIL,'||l_deleted_pool_detail||','||TO_CHAR(l_start_pool_detail,'DD-MM-YYYY hh24:MI:SS')||','||TO_CHAR(l_end,'DD-MM-YYYY hh24:MI:SS')||','||current_setting('housekeeping.l_coroner_pool_detail')::logs('PRE')||','||current_setting('housekeeping.l_coroner_pool_detail')::logs('POST')||','||current_setting('housekeeping.l_coroner_pool_detail')::logs('PRE')-current_setting('housekeeping.l_coroner_pool_detail')::logs('POST')::varchar ,TRUE);
     utl_file.put_line(l_file,'CORONER_POOL,'||l_deleted||','||TO_CHAR(l_start,'DD-MM-YYYY hh24:MI:SS')||','||TO_CHAR(clock_timestamp(),'DD-MM-YYYY hh24:MI:SS')||','||current_setting('housekeeping.l_coroner_pool')::logs('PRE')||','||current_setting('housekeeping.l_coroner_pool')::logs('POST')||','||current_setting('housekeeping.l_coroner_pool')::logs('PRE')-current_setting('housekeeping.l_coroner_pool')::logs('POST')::varchar,TRUE);

     housekeeping_check_time_expired;

   EXCEPTION 
     WHEN SQLSTATE '50004' THEN
       RAISE EXCEPTION 'e_timeout' USING ERRCODE = '50004';

     WHEN others THEN
     
       ROLLBACK;

       PERFORM set_config('housekeeping.l_err_msg', SUBSTR(sqlerrm,1,200), false);
       utl_file.put_line(l_file,'ERROR Delete from sa_content',TRUE);
       utl_file.put_line(l_file,current_setting('housekeeping.l_err_msg')::varchar(200),TRUE);

   END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE hk.housekeeping_delete_sa_coroner () FROM PUBLIC;

-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.2;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = hk,public;


-- =================================================================================================
-- =================================================================================================
CREATE OR REPLACE PROCEDURE hk.juror_digital_housekeeping_perform_deletions (p_retention_threshold bigint) AS $body$
DECLARE
 	li_responses_count int;
    li_deleted_count int;
    lc_table_deletions text;
    lb_failed bool;

    c_jd_responses CURSOR(c_retention bigint) FOR
        SELECT
            r.juror_number,
            r.date_received,
            r.processing_status,
            r.processing_complete,
            r.completed_at
        FROM JUROR_DIGITAL.juror_response r
        WHERE r.completed_at < date_trunc('day', clock_timestamp()) + -12*c_retention*'1 month'::interval;
      

BEGIN

      li_responses_count := 0;
      li_deleted_count := 0;

      IF (p_retention_threshold < 1 OR p_retention_threshold > 999) THEN
        lc_table_deletions := 'retention period should be between 1 and 999.';
        RAISE EXCEPTION '%', lc_table_deletions USING ERRCODE = '45100';
      END IF;

      FOR juror_rec IN c_jd_responses(p_retention_threshold) LOOP
        lb_failed := FALSE;
        lc_table_deletions := ''|| juror_rec.juror_number||' - ';
        li_responses_count := li_responses_count +1;

        IF NOT lb_failed THEN
          CALL hk.juror_digital_housekeeping_delete_juror_responses_aud(juror_rec.juror_number, juror_rec.completed_at, lb_failed);
        END IF;

        IF NOT lb_failed THEN
          CALL hk.juror_digital_housekeeping_del_juror_resp_cjs_employment(juror_rec.juror_number, juror_rec.completed_at, lb_failed);
        END IF;

        IF NOT lb_failed THEN
          CALL hk.juror_digital_housekeeping_del_juror_resp_special_needs(juror_rec.juror_number, juror_rec.completed_at, lb_failed);
        END IF;

        IF NOT lb_failed THEN
          CALL hk.juror_digital_housekeeping_delete_change_log_item(juror_rec.juror_number, juror_rec.completed_at, lb_failed);
        END IF;

        IF NOT lb_failed THEN
          CALL hk.juror_digital_housekeeping_delete_change_log(juror_rec.juror_number, juror_rec.completed_at, lb_failed);
        END IF;

        IF NOT lb_failed THEN
          CALL hk.juror_digital_housekeeping_del_staff_juror_response_audit(juror_rec.juror_number, juror_rec.completed_at, lb_failed);
        END IF;

        IF NOT lb_failed THEN
          CALL hk.juror_digital_housekeeping_delete_juror_response(juror_rec.juror_number, juror_rec.completed_at, lb_failed);
        END IF;
        
        IF NOT lb_failed THEN
          CALL hk.juror_digital_housekeeping_write_audit(juror_rec.juror_number, juror_rec.completed_at,lc_table_deletions, lb_failed);
          COMMIT;
          li_deleted_count := li_deleted_count + 1;
        END IF;
        NULL;
      END LOOP;

      -- insert summary
      CALL hk.juror_digital_housekeeping_write_audit(NULL, NULL,'responses : '||li_responses_count||' deleted : '||li_deleted_count);

EXCEPTION
  WHEN OTHERS THEN
    CALL hk.juror_digital_housekeeping_write_audit(NULL, NULL,lc_table_deletions);
END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE hk.juror_digital_housekeeping_perform_deletions (p_retention_threshold bigint) FROM PUBLIC;

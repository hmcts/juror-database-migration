-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.5;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = JUROR,public;


/************************************************************
 * phoenixinterface_checkForCompletedChecks()
 ************************************************************
 * Description
 * ===========
 * This procedure is called to check for completed PNC checks
 * in the Juror table and, if it finds any, write these back
 * to the JMS database. PNC checks are completed if the
 * CHECK_COMPLETE column is set to ?Y? or if the TRY_COUNT is
 * greater than one.
 ************************************************************/
CREATE OR REPLACE PROCEDURE phoenixinterface_checkForCompletedChecks () AS $body$
DECLARE


         juror_part_number    varchar(13);
	 disqualified         varchar(1);
         result_str           varchar(1);
	 check_str            varchar(1);
         jms_result           bigint;
	 retry_count          bigint;


         c_read_juror CURSOR FOR SELECT id, disqualified, try_count FROM juror
            WHERE try_count > 1 or check_complete = 'Y';


BEGIN
         -- The various parts of this procedure are contained
         -- in seperate blocks to enable an error with one
         -- record to not stop the processing of others.
	 PERFORM set_config('phoenixinterface_lc_job_type', 'phoenixinterface_CHECKFORCOMPLETEDCHECKS()', false);

         OPEN c_read_juror;

         LOOP
            BEGIN
               FETCH c_read_juror INTO juror_part_number, disqualified, retry_count;

               IF disqualified = 'Y' THEN
                  result_str := 'F';
               ELSE
                  result_str := 'P';
               END IF;

	       IF retry_count > 1 THEN
                  check_str := 'U';
               ELSE
                  check_str := 'C';
               END IF;

               BEGIN
                  UPDATE phoenix_temp SET result = result_str, checked = check_str
                     WHERE part_no = juror_part_number;

                  BEGIN
                     DELETE FROM juror WHERE id = juror_part_number;
                  EXCEPTION
                     WHEN OTHERS THEN
                        CALL phoenixinterface_write_error( 'Error on deleting juror from juror table ' );
			ROLLBACK;
			RAISE;
                  END;

               EXCEPTION
                  WHEN OTHERS THEN
                     CALL phoenixinterface_write_error( 'Error on writing check result to JMS for ' || juror_part_number);
		     ROLLBACK;
		     RAISE;
               END;

               COMMIT;

            EXCEPTION
               WHEN OTHERS THEN
                  CALL phoenixinterface_write_error( 'Error on fetching a juror to write result ' );
		  ROLLBACK;
		  RAISE;
            END;

            EXIT WHEN NOT FOUND; /* apply on c_read_juror */
         END LOOP;

         CLOSE c_read_juror;

         jms_result := phoenix_checking.finalise();

         IF jms_result > 0 THEN
            CALL phoenixinterface_write_error( 'Error on finalising results in JMS ' || jms_result );
	    ROLLBACK;
	    RAISE EXCEPTION '%', 'phoenix_checking.finalise has errored' USING ERRCODE = '45903';
	 ELSE
	    COMMIT;
	 END IF;

      EXCEPTION
         WHEN OTHERS THEN
            CALL phoenixinterface_write_error( 'Error on opening cursor on JMS juror table ' );
	    ROLLBACK;
	    RAISE;

   END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE phoenixinterface_checkForCompletedChecks () FROM PUBLIC;

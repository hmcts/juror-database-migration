-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.5;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = JUROR,public;




CREATE OR REPLACE PROCEDURE auto_generate_confirmation_letter () AS $body$
BEGIN

   PERFORM set_config('auto_generate_lc_job_type', 'AUTO CONFIRMATION LETTER GENERATION', false);
   PERFORM set_config('auto_generate_lc_englishformtype', '5224A', false);
   PERFORM set_config('auto_generate_lc_welshformtype', '5224AC', false);
   PERFORM set_config('auto_generate_lc_otherinformation', 'Confirmation Letter Auto', false);
   PERFORM set_config('auto_generate_lc_historycode', 'RRES', false);



-- RFS 3681 following Insert statement now takes the attendance time from UNIQUE_POOL.ATTEND_TIME if present,
-- otherwise continues to use the default from COURT_LOCATION.LOC_ATTEND_TIME
-- UNIQUE_POOL.ATTEND_TIME is converted to a string using a 12 hour clock with the addition of the Meridian suffix AM or PM
--pool.police_check would be null of procdure PHOENIX has not run
--pool.police_check would be 'E' if a police check has been requested but has not yet been completed (PHOENIX has run but PHOENIXINTERFACE has not run
--Treat phoenix_date of Saturday as Monday (phoenix_date+2) and phoenix_date of Sunday as Monday (phoenix_date+1)
	 INSERT into juror.temp_auto_generate_lett(part_no, pool_no, loc_code, row_id, lang, details)
	 SELECT p.part_no, p.pool_no, u.loc_code, c.ROWID,CASE WHEN upper(p.welsh)='Y' THEN 'W' WHEN upper(p.welsh) IS NULL THEN 'E'  ELSE 'E' END  ,
					   current_setting('auto_generate_lc_date_part_text')::varchar(30)
					|| cc.loc_code
					|| CASE WHEN CASE WHEN upper(p.welsh)='Y' THEN 'W' WHEN upper(p.welsh) IS NULL THEN 'E'  ELSE 'E' END ='W' THEN  RPAD(upper(cc.loc_name),40) WHEN CASE WHEN upper(p.welsh)='Y' THEN 'W' WHEN upper(p.welsh) IS NULL THEN 'E'  ELSE 'E' END ='E' THEN  CASE WHEN cc.loc_code='626' THEN RPAD(upper(cc.loc_name),59)  ELSE RPAD('The Crown Court at '||upper(cc.loc_name),59) END  END
					|| upper(current_setting('auto_generate_lc_bureau_part_text')::varchar(300))
					|| RPAD(Rtrim(to_char(p.next_date,'DAY')) || ' ' ||
					     to_char(p.next_date,'DD')		   || ' ' ||
			             Rtrim(to_char(p.next_date,'MONTH')) ||', ' ||
						 to_char(p.next_date,'YYYY'),32,' ')
					|| Rpad(CASE WHEN u.attend_time IS NULL THEN                             coalesce(CASE WHEN sign(position('AM' in cc.loc_attend_time))=0 THEN cc.loc_attend_time||' AM'  ELSE cc.loc_attend_time END ,'9.00AM')  ELSE to_char(u.attend_time,'hh:miAM') END ,
                         8,' ')
					|| RPAD(coalesce(p.title,' '),10,' ') ||
			    	   RPAD(coalesce(p.fname,' '),20,' ') ||
			    	   RPAD(coalesce(p.lname,' '),20,' ') ||
			    	   RPAD(RPAD(coalesce(p.address,' '),35) ||
			    	   RPAD(p.address2,35) ||
			    	   RPAD(p.address3,35) ||
			    	   RPAD(p.address4,35) ||
			    	   RPAD(p.address5,35) ||
			    	   RPAD(p.address6,35) ||
			    	   RPAD(p.zip,10),220) ||
			    	   RPAD(coalesce(p.part_no,' '),9,' ')
					|| upper(current_setting('auto_generate_lc_bureau_signature')::varchar(30))
		      FROM  POOL p, UNIQUE_POOL u, CONFIRM_LETT c,  COURT_LOCATION cc
			  WHERE p.POOL_NO = u.POOL_NO
			  AND  	p.OWNER = '400'
			  AND	u.OWNER = '400'
			  AND	c.OWNER = '400'
			  AND	u.LOC_CODE = cc.LOC_CODE
			  AND	p.IS_ACTIVE = 'Y'
			  AND	p.RESPONDED = 'Y'
			  AND   p.STATUS    =  2
			  AND   p.NEXT_DATE >= p.PHOENIX_DATE
			  AND  	CASE WHEN to_char(p.PHOENIX_DATE,'D')=6 THEN date_trunc('day', p.PHOENIX_DATE) + '2 days'::interval WHEN to_char(p.PHOENIX_DATE,'D')=7 THEN date_trunc('day', p.phoenix_date) + '1 days'::interval  ELSE date_trunc('day', p.phoenix_date) END  <= date_trunc('day', clock_timestamp() - CASE WHEN coalesce(p.police_check,'E')='E' THEN current_setting('auto_generate_ld_phoenix_delay')::integer  ELSE 0 END )
			  AND 	p.PHOENIX_DATE is NOT NULL
			  AND 	p.PART_NO = c.part_no
			  AND (c.PRINTED <> 'Y' or c.PRINTED is null);

		CALL auto_generate_populate_abaccus();
		CALL auto_generate_populate_part_hist();
		CALL auto_generate_populate_print_files();

		UPDATE CONFIRM_LETT c 
		SET c.PRINTED = 'Y', c.DATE_PRINTED = current_setting('auto_generate_ld_begin_time')::timestamp(0)
		FROM juror.temp_auto_generate_lett t
		WHERE  c.ROWID = t.ROW_ID AND c.OWNER = '400';

		commit;

		EXECUTE 'truncate table temp_auto_generate_lett'; -- This bit is added so that print files are not created twice
																	-- if the package is run twice in same session
 EXCEPTION
   when others then
	 CALL auto_generate_write_error(sqlerrm);
     rollback;
	 raise;
 END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE auto_generate_confirmation_letter () FROM PUBLIC;

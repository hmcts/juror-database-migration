-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.5;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = JUROR,public;

/************************************************************************************************/

/************************************************************************
 *
*
 *	Procedure:	get_return_date                    					 *
 *
*
 *	Access:		private													 *
 *
*
 *	Arguments:	Deadline as NUMBER		 								 *
 *
 *
 *	Returns:	latest return date as DATE 								 *
 *
 *
 *	Description:	This procedure  accepts  deadline as input			 *
 *					If the procedure is run on a Friday after 6 pm		 *
 *					it will return the latest return date 	  			 *
 *					For any other day, this procedure will find the 	 *
 *					nearest friday which has passed and accordinly 		 *
 *					compute the latest return date						 *
 *									   		  	  						 *
 *
 *	Name	  	Date		 Action										 *
 *	====		  ====		 ======										 *
 *	Joy       15/09/05 Created this procedure						 *
 *	Kal Sohal 17/01/07 v1.5 SCR 4362 - Pools transferring too early.
 *                     Modify code which determines if procedure is being run before 6pm on a Friday by
 *                     reference to the dates day number 6 with NEW reference to actual dates day name 'fri'.
 *  Chris W   20/11/15 Get deadline from court_location table
 ************************************************************************/
CREATE OR REPLACE PROCEDURE pool_transfer_get_return_date (pn_DeadLine bigint, pd_LatestReturnDate INOUT timestamp(0)) AS $body$
DECLARE

	ln_Day	 varchar(3);

BEGIN
    PERFORM set_config('pool_transfer_ld_effectivedate', clock_timestamp(), false);
  	IF (((TO_CHAR(current_setting('pool_transfer_ld_effectivedate')::timestamp(0),'sssss'))::numeric  <= 64800)
       AND (TO_CHAR(current_setting('pool_transfer_ld_effectivedate')::timestamp(0),'dy') = 'fri'))  THEN -- Set the effective date to previous day
 		   PERFORM set_config('pool_transfer_ld_effectivedate', date_trunc('day', current_setting('pool_transfer_ld_effectivedate')::timestamp(0))-1, false); 	      -- if the procedure runs before 6 pm on a Friday
 		END IF;
    ln_Day := TO_CHAR(current_setting('pool_transfer_ld_effectivedate')::timestamp(0),'dy');
    CASE ln_Day
      WHEN 'mon' THEN PERFORM set_config('pool_transfer_ld_effectivedate', date_trunc('day', current_setting('pool_transfer_ld_effectivedate')::timestamp(0) - 3), false); -- Monday
      WHEN 'tue' THEN PERFORM set_config('pool_transfer_ld_effectivedate', date_trunc('day', current_setting('pool_transfer_ld_effectivedate')::timestamp(0) - 4), false); -- Tuesday
      WHEN 'wed' THEN PERFORM set_config('pool_transfer_ld_effectivedate', date_trunc('day', current_setting('pool_transfer_ld_effectivedate')::timestamp(0) - 5), false); -- Wednesday
      WHEN 'thu' THEN PERFORM set_config('pool_transfer_ld_effectivedate', date_trunc('day', current_setting('pool_transfer_ld_effectivedate')::timestamp(0) - 6), false); --Thursday
      WHEN 'fri' THEN PERFORM set_config('pool_transfer_ld_effectivedate', date_trunc('day', current_setting('pool_transfer_ld_effectivedate')::timestamp(0)), false); -- Friday
      WHEN 'sat' THEN PERFORM set_config('pool_transfer_ld_effectivedate', date_trunc('day', current_setting('pool_transfer_ld_effectivedate')::timestamp(0) - 1 ), false); -- Saturday
      WHEN 'sun' THEN PERFORM set_config('pool_transfer_ld_effectivedate', date_trunc('day', current_setting('pool_transfer_ld_effectivedate')::timestamp(0) - 2), false); --Sunday
		END CASE;
    pd_LatestReturnDate   := current_setting('pool_transfer_ld_effectivedate')::timestamp(0) + pn_DeadLine + 5;


END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pool_transfer_get_return_date (pn_DeadLine bigint, pd_LatestReturnDate INOUT timestamp(0)) FROM PUBLIC;

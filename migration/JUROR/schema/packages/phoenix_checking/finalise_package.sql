-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.5;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = JUROR,public;




CREATE OR REPLACE FUNCTION phoenix_checking_finalise () RETURNS integer AS $body$
DECLARE


  police_check CURSOR FOR
  SELECT t.part_no,
         t.last_name,
         t.first_name,
         t.postcode,
         t.date_of_birth,
         t.result,
         t.checked,
	 p.pool_no,
	 p.read_only,
	 p.loc_code,
	 p.oid row_idd
  from   phoenix_temp t, pool p
  where (t.result='P' or t.result='F')
  and	 p.owner = '400'
  and	 p.part_no = t.part_no
  and 	 p.is_active = 'Y';

  l_owner    varchar(3);
  lc_Job_Type   text;

BEGIN

lc_Job_Type := 'phoenix_checking_FINALISE()';

  for each_participant in police_check loop

    update pool
    set    phoenix_checked = CASE WHEN each_participant.checked='C' THEN 'C' WHEN each_participant.checked='U' THEN 'U' WHEN each_participant.checked = NULL THEN 'U' END ,
	  		 police_check	 = CASE WHEN each_participant.result='P' THEN 'P' WHEN each_participant.result='F' THEN 'F' END ,
			 status			 = CASE WHEN each_participant.result='P' THEN status WHEN each_participant.result='F' THEN '6' END ,
			 disq_code		 = CASE WHEN each_participant.result='F' THEN 'E'  ELSE NULL END ,
			 date_disq		 = CASE WHEN each_participant.result='F' THEN clock_timestamp()  ELSE NULL END
    where  rowid = each_participant.row_idd;

    if each_participant.result = 'P' then
        -- RFS 3681 Changed value for other_information
        insert into part_hist(owner,
			     part_no,
                             date_part,
                             history_code,
                             user_id,
                             other_information,
                             pool_no)
                     values ( '400',
			     each_participant.part_no,
                             clock_timestamp(),
                             'POLG',
                             'SYSTEM',
                             CASE WHEN each_participant.checked='C' THEN 'Passed' WHEN each_participant.checked='U' THEN 'Unchecked - timed out' WHEN each_participant.checked IS NULL THEN 'Unchecked - timed out' END ,
                             each_participant.pool_no);
      else
        insert into disq_lett(owner,
			       part_no,
                               disq_code,
                               date_disq,
                               date_printed,
                               printed)
                       values ('400',
			       each_participant.part_no,
                               'E',
                               clock_timestamp(),
                               null,
                               null);

        -- RFS 3681 Changed value for other_information
        insert into part_hist(owner,
			       part_no,
                               date_part,
                               history_code,
                               user_id,
                               other_information,
                               pool_no)
                        values ( '400',
			       			   each_participant.part_no,
                               clock_timestamp(),
                               'POLF',
                               'SYSTEM',
                               'Failed',
                               each_participant.pool_no);

        insert into part_hist(owner,
			       			  part_no,
                               date_part,
                               history_code,
                               user_id,
                               other_information,
                               pool_no)
                        values ( '400',
			       			   each_participant.part_no,
                               clock_timestamp()+(1/86400),
                               'PDIS',
                               'SYSTEM',
                               'Disqualify - E',
                               each_participant.pool_no);

     end if;



    -- RFS 3681 Update/insert court copy of juror record if juror has already transfered to the court
    if each_participant.read_only = 'Y' then

       select context_id
       into STRICT l_owner
       from context_data
       where loc_code = each_participant.loc_code;

       update pool
       set    phoenix_checked = CASE WHEN each_participant.checked='C' THEN 'C' WHEN each_participant.checked='U' THEN 'U' WHEN each_participant.checked = NULL THEN 'U' END ,
	  		 police_check	 = CASE WHEN each_participant.result='P' THEN 'P' WHEN each_participant.result='F' THEN 'F' END ,
			 status			 = CASE WHEN each_participant.result='P' THEN status WHEN each_participant.result='F' THEN '6' END ,
			 disq_code		 = CASE WHEN each_participant.result='F' THEN 'E'  ELSE NULL END ,
			 date_disq		 = CASE WHEN each_participant.result='F' THEN clock_timestamp()  ELSE NULL END
       where owner = l_owner and part_no = each_participant.part_no and is_active = 'Y';

       if each_participant.result = 'P' then
          insert into part_hist(owner,
			     part_no,
                             date_part,
                             history_code,
                             user_id,
                             other_information,
                             pool_no)
                     values ( l_owner,
			     each_participant.part_no,
                             clock_timestamp(),
                             'POLG',
                             'SYSTEM',
                             CASE WHEN each_participant.checked='C' THEN 'Passed' WHEN each_participant.checked='U' THEN 'Unchecked - timed out' WHEN each_participant.checked IS NULL THEN 'Unchecked - timed out' END ,
                             each_participant.pool_no);
        else
          insert into part_hist(owner,
			       part_no,
                               date_part,
                               history_code,
                               user_id,
                               other_information,
                               pool_no)
                        values ( l_owner ,
			       each_participant.part_no,
                               clock_timestamp(),
                               'POLF',
                               'SYSTEM',
                               'Failed',
                               each_participant.pool_no);

          insert into part_hist(owner,
			       part_no,
                               date_part,
                               history_code,
                               user_id,
                               other_information,
                               pool_no)
                        values ( l_owner,
			       each_participant.part_no,
                               clock_timestamp()+(1/86400),
                               'PDIS',
                               'SYSTEM',
                               'Disqualify - E',
                               each_participant.pool_no);
       end if;

     end if;

   end loop;

   delete from phoenix_temp where result = 'P' or result = 'F';

   return(0);

exception
     when others then
	CALL phoenix_checking_write_error(sqlerrm);
	raise;
       return(1);

END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION phoenix_checking_finalise () FROM PUBLIC;

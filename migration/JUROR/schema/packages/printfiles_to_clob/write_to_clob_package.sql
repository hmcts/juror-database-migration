-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.5;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = JUROR,public;

DROP TYPE IF EXISTS t_clob_detail_array;
DROP TYPE IF EXISTS t_clob_rowid;

CREATE TYPE t_clob_detail_array as
(
	detail_rec varchar(1260)
);

CREATE TYPE t_clob_rowid as
(
	rowid varchar(30)
);

/***********************************************************************
* PROCEDURE write_to_clob
*
* 26/2/15 Strip out CRLF (end of line) characters.
*         Replacing with space to preserve fixed width columns
*
***********************************************************************/
CREATE OR REPLACE PROCEDURE printfiles_to_clob_write_to_clob (p_FormType text, p_RecordLength bigint) AS $body$
DECLARE


 c_extract CURSOR(c_FormType text) FOR
               SELECT oid row_id 
			   , replace(replace(detail_rec,chr(10),' '),chr(13),' ') detail_rec
			   FROM PRINT_FILES
			   WHERE form_type = p_FormType
			   AND   CASE WHEN extracted_flag IS NULL THEN 'N'  ELSE NULL END  = 'N'
			   AND date_trunc('day', creation_date) <= ext_date;
		
  l_data t_clob_detail_array[];
  l_rowid t_clob_rowid[];
			
 c_lob text;
 l_count bigint := 0;
 l_fileName varchar(15) := PRINT_FILES.PRINTFILE_NAME;
 l_Header	varchar(300);

BEGIN
 
   OPEN c_extract(p_FormType);
      LOOP
	  	for i in 1..current_setting('printfiles_to_clob_g_limit')::bigint
		loop
	     FETCH c_extract into l_rowid, l_data;
		      l_count := l_data.count;
			  IF l_count > 0 THEN
		       SELECT 'JURY'||lpad(nextval('data_file_no'),4,'0')||lpad(print_Transmission, 2,'0') || '.' || lpad(print_Transmission, 4, '0'),
			          rpad('   ' || rpad(p_FormType,16) || lpad(l_count ,6,0) || lpad(l_count ,6,0) || '50' || lpad(p_RecordLength ,8,0),256,' ') 
			   INTO STRICT l_fileName , l_Header
			   FROM system_file
			   where owner = '400';
			
		       insert into content_store(request_id, document_id,file_type, data) 
			                     values (nextval('content_store_seq'),l_FileName,'PRINT',NULL ) 
			   returning data into c_lob;

			   c_lob := l_header||chr(10);
		
			  FOR j in 1.. l_data.count LOOP
			   c_lob := c_lob || l_data(j) || chr(10);
			   update print_files set  extracted_flag = 'Y'	where rowid = l_rowid(j);
			  END LOOP;
			
			  commit;
			 END IF;
			EXIT WHEN NOT FOUND; /* apply on c_extract */
		END LOOP;
		EXIT;
	  END LOOP;	 	
exception
  when others then
    		RAISE EXCEPTION '%', 'Error in write_details Procedure' USING ERRCODE = '45008';
		raise;
END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE printfiles_to_clob_write_to_clob (p_FormType text, p_RecordLength bigint) FROM PUBLIC;

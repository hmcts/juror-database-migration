-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.5;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = JUROR,public;


/************************************************************************
 *	FUNCTION:	court_phoenix_jurorMiddleName( name_in VARCHAR2 )
 *	Access  :	private
 *	Args In :	name_in (juror first name)
 *	Returns :	s_name (Varchar2)
 *
 *	Desc    :	This function analyses the jurors first name and determines if it
 *            contains compeonents such as initials and middle names.
 *            the middle name.
 *
 *            This function will :
 *            1) Remove unwanted chars from the middle name (see Jurorcleanname)
 *            2) Remove the first name if other component names are present
 *            3) Separate each component of the middlename with a '/'
 *            4) Remove leading and trailing spaces...
 *            Example: Daniel [SNR] Jake Lewis --> Jake/Lewis
 *                     William P.              --> P
 *
 *  History
 *
 *	Version Name		  Date		 Desc
 *	======= ========= ======== ====
 *  V1.0    ???       ???      Initial version
 *	V1.2    Kal Sohal 20/11/06 SCR 4341 PNC Errors.
 *	V1.3    Kal Sohal 05/01/07 SCR 4341 SCR 4341 - Fixed court_phoenix_jurorMiddleName() system test bug which returned the
 *                             firstname as the middlename when no 'splits' found in
 *                             firstname.
 *                             i.e. Firstname=Frank,
 *                             before fix,Middlename=Frank
 *                             after fix, Middlename=empty string
 *	V1.4    Kal Sohal 08/01/07 SCR 4341 - court_phoenix_jurorMiddleName() now returns NULL where middlename does not exist.
 *  V1.5    M Turton  21/03/11 Trac3897 Handle characters in () and []
 ************************************************************************/
CREATE OR REPLACE FUNCTION court_phoenix_jurorMiddleName ( name_in text ) RETURNS varchar AS $body$
DECLARE


      s_name               varchar(20);
      n_pos                bigint;


BEGIN
      -- Replace all full stops and commas with a space and
      -- Remove anything within brackets () or [] and
      -- Remove leading and trailing spaces...
      --s_name := court_phoenix_jurorCleanName(name_in); --Moved below for Trac3897 - ensure use middle name
      -- If there is a 'split' in the name, remove Firstname, otherwise there
      -- is no middle name to return.
      --n_pos := INSTR(s_name, ' ' ); Trac3897
      n_pos := position(' '  in name_in);

      IF n_pos > 0 THEN
         s_name := Substr(name_in, n_pos+1);   --Trac3897
      ELSE
         s_name := NULL;
      END IF;

      s_name := court_phoenix_jurorCleanName(s_name);  --Trac3897
      -- Remove leading and trailing spaces and
      -- Replace all 1 or more occurances of space with a '/'
      s_name := REGEXP_REPLACE(trim(both s_name), '( ){1,}', '/', 'g');

   Return UPPER(trim(both s_name));

   EXCEPTION
      WHEN OTHERS THEN
         CALL court_phoenix_write_error( 'Error in jurorMiddleName ' );

   END;

$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION court_phoenix_jurorMiddleName ( name_in text ) FROM PUBLIC;

-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.5;sid=xe;port=1521

SET client_encoding TO 'UTF8';
SET search_path = JUROR,public;


/**************************
* Procedure court_phoenix_FINALISE()
* Context not set for finalise
* 27/05/15 C Wright Fixed defect in decode setting other_information
**************************/
CREATE OR REPLACE PROCEDURE court_phoenix_finalise () AS $body$
DECLARE


  court_police_check CURSOR FOR
  SELECT t.owner cpnc_owner,
         t.id,
         t.last_name,
         t.first_name,
         t.postcode,
         t.dob,
         t.disqualified,
         t.check_complete,
         t.try_count,
         p.owner pool_owner,
	       p.pool_no,
	       p.read_only,
	       p.loc_code,
	       p.oid row_idd
  from   juror_court_police_check t, pool p
  where (t.try_count > 1 or t.check_complete = 'Y')
  and	 p.owner = t.owner
  and	 p.part_no = t.id
  and  p.is_active = 'Y';

  lc_Job_Type   text;

BEGIN
lc_Job_Type := 'court_phoenix_FINALISE()';

  for each_participant in court_police_check loop

  update pool
  set phoenix_checked = CASE WHEN each_participant.try_count=0 THEN 'C' WHEN each_participant.try_count=1 THEN 'C' WHEN each_participant.try_count = NULL THEN 'C'  ELSE 'U' END ,
			police_check = CASE WHEN each_participant.disqualified='N' THEN 'P' WHEN each_participant.disqualified='Y' THEN 'F' END ,
	    status = CASE WHEN each_participant.disqualified='N' THEN status WHEN each_participant.disqualified='Y' THEN '6' END ,
		  disq_code = CASE WHEN each_participant.disqualified='Y' THEN 'E'  ELSE NULL END ,
		  date_disq = CASE WHEN each_participant.disqualified='Y' THEN clock_timestamp()  ELSE NULL END
  where rowid = each_participant.row_idd;

  if each_participant.disqualified = 'N' then
        -- RFS 3681 Changed value for other_information
        insert into part_hist(owner,
			                       part_no,
                             date_part,
                             history_code,
                             user_id,
                             other_information,
                             pool_no)
                     values (each_participant.cpnc_owner,
			                      each_participant.id,
                            clock_timestamp(),
                            'POLG',
                            'SYSTEM',
                             CASE WHEN each_participant.try_count='0' THEN 'Passed' WHEN each_participant.try_count='1' THEN 'Passed' WHEN each_participant.try_count IS NULL THEN 'Unchecked - timed out'  ELSE 'Unchecked - timed out' END ,
                            each_participant.pool_no);
  else
       insert into disq_lett(owner,
			                        part_no,
                              disq_code,
                              date_disq,
                              date_printed,
                              printed)
                       values (each_participant.cpnc_owner,
			                        each_participant.id,
                              'E',
                              clock_timestamp(),
                              null,
                              null);
        -- RFS 3681 Changed value for other_information
        insert into part_hist(owner,
			                         part_no,
                               date_part,
                               history_code,
                               user_id,
                               other_information,
                               pool_no)
                        values (each_participant.cpnc_owner,
			       			             each_participant.id,
                               clock_timestamp(),
                               'POLF',
                               'SYSTEM',
                               'Failed',
                               each_participant.pool_no);

        insert into part_hist(owner,
			       			            part_no,
                              date_part,
                              history_code,
                              user_id,
                              other_information,
                              pool_no)
                        values (each_participant.cpnc_owner,
			       			             each_participant.id,
                               clock_timestamp()+(1/86400),
                               'PDIS',
                               'SYSTEM',
                               'Disqualify - E',
                               each_participant.pool_no);

       -- delete from defer.dbf table on owner and part_no 
       delete from defer_dbf where defer_dbf.owner = each_participant.cpnc_owner 
       and defer_dbf.part_no = each_participant.id;

     end if;

   end loop;

   delete from juror_court_police_check where try_count > 1 or check_complete = 'Y';

   commit;
   --return(0);
exception
     when others then
	CALL court_phoenix_write_error(sqlerrm);
	raise;
       --return(1);
END;

$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE court_phoenix_finalise () FROM PUBLIC;

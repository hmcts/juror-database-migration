-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.4;sid=xe;port=1521

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE pkg_pwd_rules AS

PROCEDURE password_rules
(jurorusername varchar2,
  jurorpassword varchar2,
  old_jurorpassword varchar2)
   ;

END pkg_pwd_rules;


CREATE OR REPLACE PACKAGE BODY pkg_pwd_rules AS

PROCEDURE password_rules
(jurorusername varchar2,
  jurorpassword varchar2,
  old_jurorpassword varchar2)
  IS
   n boolean;
   m integer;
   isdigit boolean;
   islowchar  boolean;
   isupchar  boolean;
   ispunct boolean;
   digitarray varchar2(10);
   punctarray varchar2(25);
   lowchararray varchar2(26);
   upchararray varchar2(26);

BEGIN
   digitarray:= '0123456789';
   lowchararray:= 'abcdefghijklmnopqrstuvwxyz';
   upchararray:= 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
   punctarray:='!"#$%^&()`*+,-/:;<=>?_?';

   -- Check if the password is same as the username
   IF NLS_LOWER(jurorpassword) = NLS_LOWER(jurorusername) THEN
     raise_application_error(-20001, 'Password same as Login Name');
   END IF;

   --Check for the minimum length of the password
   IF length(jurorpassword) < 8 THEN
      raise_application_error(-20002, 'Password length less than 8');
   END IF;

   -- Check if the password is too simple. A dictionary of words may be
   -- maintained and a check may be made so as not to allow the words
   -- that are too simple for the password.
--   IF NLS_LOWER(jurorpassword) IN ('welcome', 'database', 'account',  'user', 'password', 'oracle', 'computer', 'abcd')

--THEN
--      raise_application_error(-20002, 'Password too simple');
--   END IF;

   -- Check if the password contains at least one lower-case letter, one upper-case letter, one digit and one
   -- punctuation mark.
   -- 1. Check for the digit
   isdigit:=FALSE;
   m := length(jurorpassword);
   FOR i IN 1..10 LOOP
      FOR j IN 1..m LOOP
         IF substr(jurorpassword,j,1) = substr(digitarray,i,1) THEN
            isdigit:=TRUE;
             GOTO findlower;
         END IF;
      END LOOP;
   END LOOP;
   IF isdigit = FALSE THEN
      raise_application_error(-20003, 'Password should contain at least one digit, one uppercase character, one lowercase character and one special character from ' || punctarray);
   END IF;
   -- 2. Check for the lower-case character
   <<findlower>>
   islowchar:=FALSE;
   FOR i IN 1..length(lowchararray) LOOP
      FOR j IN 1..m LOOP
         IF substr(jurorpassword,j,1) = substr(lowchararray,i,1) THEN
            islowchar:=TRUE;
             GOTO findupper;
         END IF;
      END LOOP;
   END LOOP;
   IF islowchar = FALSE THEN
      raise_application_error(-20003, 'Password should contain at least one digit, one uppercase character, one lowercase character and one special character from ' || punctarray);
   END IF;
   -- 3. Check for the upper-case character
   <<findupper>>
   isupchar:=FALSE;
   FOR i IN 1..length(upchararray) LOOP
      FOR j IN 1..m LOOP
         IF substr(jurorpassword,j,1) = substr(upchararray,i,1) THEN
            isupchar:=TRUE;
             GOTO findpunct;
         END IF;
      END LOOP;
   END LOOP;
   IF isupchar = FALSE THEN
      raise_application_error(-20003, 'Password should contain at least one digit, one uppercase character, one lowercase character and one special character from ' || punctarray);
   END IF;
   -- 4. Check for the punctuation
   <<findpunct>>
   ispunct:=FALSE;
   FOR i IN 1..length(punctarray) LOOP
      FOR j IN 1..m LOOP
         IF substr(jurorpassword,j,1) = substr(punctarray,i,1) THEN
            ispunct:=TRUE;
         END IF;
      END LOOP;
   END LOOP;
   IF ispunct = FALSE THEN
      raise_application_error(-20003, 'Password should contain at least one digit, one uppercase character, one lowercase character and one special character from ' || punctarray);
   END IF;

END password_rules;

END pkg_pwd_rules;

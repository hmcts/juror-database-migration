-- Generated by Ora2Pg, the Oracle database Schema converter, version 24.0
-- Copyright 2000-2023 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=172.17.0.5;sid=xe;port=1521

SET client_encoding TO 'UTF8';

SET search_path = "JUROR",public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE package copy_history is

  -- Author  : C WRIGHT
  -- Created : 24/06/2015
  -- Purpose : Procedure for copying part_hist between courts
  
  PROCEDURE main(l_from_court varchar2, l_to_court varchar2, l_to_pool_no varchar2);

end copy_history;



CREATE OR REPLACE package body copy_history AS
  
PROCEDURE	    write_error(p_info varchar2);
   
lc_Job_Type	    error_log.JOB%type;

/******************************************
* Procedure to copy history between courts
******************************************/
PROCEDURE main(l_from_court varchar2, l_to_court varchar2, l_to_pool_no varchar2) IS
  
BEGIN
lc_Job_Type := 'Copy_history.main';

  /** Copy part_hist avoiding duplicating history already at receiving court */
	INSERT INTO part_hist (Owner,part_no,date_part,history_code,user_id,other_information,pool_no)

    	SELECT  c_to.context_id, h.part_no,date_part,history_code,user_id,other_information,h.pool_no
    	FROM	part_hist h, -- used to gather data to copy from from sending court
            context_data c_from, -- used to get owner for loc_code of sending court
            context_data c_to, -- used to get owner for loc_code of recieving court
            pool p -- used to identify which part_nos need data to be copied
    	WHERE	h.owner = c_from.context_id
      and c_from.loc_code = l_from_court
      and c_to.loc_code = l_to_court
    	AND	h.part_no = p.part_no
      and p.owner = c_to.context_id
      and p.pool_no = l_to_pool_no  
      and is_active ='Y' 
      
      minus
    
    	SELECT  context_id, h.part_no,date_part,history_code,user_id,other_information,h.pool_no
    	FROM	part_hist h, -- used to gather data already in receiving court
            context_data c, -- used to get owner for loc_code of recieving court
            pool p -- used to identify which part_nos need data to be copied
    	WHERE	h.owner = c.context_id
      and c.loc_code = l_to_court
    	AND	h.part_no = p.part_no
      and p.owner = c.context_id
      and p.pool_no = l_to_pool_no  
      and is_active ='Y' ;
  
  /** Copy phone_log avoiding duplicating entries already at receiving court */
  INSERT INTO phone_log (owner,part_no,start_call,user_id,end_call,phone_code,notes)

    	SELECT  c_to.context_id, h.part_no,start_call,user_id,end_call,phone_code,h.notes
    	FROM	phone_log h, -- used to gather data to copy from from sending court
            context_data c_from, -- used to get owner for loc_code of sending court
            context_data c_to, -- used to get owner for loc_code of recieving court
            pool p -- used to identify which part_nos need data to be copied
    	WHERE	h.owner = c_from.context_id
      and c_from.loc_code = l_from_court
      and c_to.loc_code = l_to_court
    	AND	h.part_no = p.part_no
      and p.owner = c_to.context_id
      and p.pool_no = l_to_pool_no  
      and is_active ='Y' 
      
      minus
    
    	SELECT  context_id, h.part_no,start_call,user_id,end_call,phone_code,h.notes
    	FROM	phone_log h, -- used to gather data already in receiving court
            context_data c, -- used to get owner for loc_code of recieving court
            pool p -- used to identify which part_nos need data to be copied
    	WHERE	h.owner = c.context_id
      and c.loc_code = l_to_court
    	AND	h.part_no = p.part_no
      and p.owner = c.context_id
      and p.pool_no = l_to_pool_no  
      and is_active ='Y' ;
   
  /** Copy part_amendments avoiding duplicating entries already at receiving court */
  INSERT INTO part_amendments (owner,part_no,edit_date,edit_userid,title,fname,lname, dob, address, zip,sort_code, bank_acct_name, bank_acct_no, bldg_soc_roll_no, pool_no )

	    SELECT c_to.context_id, h.part_no,edit_date,edit_userid,h.title,h.fname,h.lname, h.dob, h.address,
             h.zip,h.sort_code, h.bank_acct_name, h.bank_acct_no, h.bldg_soc_roll_no, h.pool_no
    	FROM	part_amendments h, -- used to gather data to copy from from sending court
            context_data c_from, -- used to get owner for loc_code of sending court
            context_data c_to, -- used to get owner for loc_code of recieving court
            pool p -- used to identify which part_nos need data to be copied
    	WHERE	h.owner = c_from.context_id
      and c_from.loc_code = l_from_court
      and c_to.loc_code = l_to_court
    	AND	h.part_no = p.part_no
      and p.owner = c_to.context_id
      and p.pool_no = l_to_pool_no  
      and is_active ='Y' 
      
      minus
    
	    SELECT context_id, h.part_no,edit_date,edit_userid,h.title,h.fname,h.lname, h.dob, h.address,
             h.zip,h.sort_code, h.bank_acct_name, h.bank_acct_no, h.bldg_soc_roll_no, h.pool_no
    	FROM	part_amendments h, -- used to gather data already in receiving court
            context_data c, -- used to get owner for loc_code of recieving court
            pool p -- used to identify which part_nos need data to be copied
    	WHERE	h.owner = c.context_id
      and c.loc_code = l_to_court
    	AND	h.part_no = p.part_no
      and p.owner = c.context_id
      and p.pool_no = l_to_pool_no  
      and is_active ='Y' ;
  
  
  -- No COMMIT here as app will perform the commit

    EXCEPTION
        when others then
       write_error(sqlerrm);
 	      rollback;
       raise;
END main;


/**************************
* Procedure 
*
**************************/
PROCEDURE write_error(p_info varchar2) IS
pragma autonomous_transaction;

BEGIN
    INSERT INTO ERROR_LOG (job, error_info) values (lc_Job_Type, p_info);
	 commit;
END write_error;

end copy_history;
